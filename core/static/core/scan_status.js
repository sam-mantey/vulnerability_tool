// loads the DOM content before executing any program
document.addEventListener('DOMContentLoaded', () => {
    const spiderStatusElement = document.getElementById('spider_status');
    const spiderResultElement = document.getElementById('spider_results');
    const scanStatusUrl = '/check_scan_status/'
    const scanResultsElement = document.getElementById('scan_results')
    const activeStatusElement = document.getElementById('active_scan_status')
    const scanTypeElement = document.getElementById('scan_type')

    const checkStatus = async (url) => {
        try {
            console.log(`In the checkStatus js file: ${url} `)
            const response = await fetch(url);
            // throws error if response is not ok
            if (!response.ok) {
                throw new Error(`Network response was not ok: ${response.statusText}`);
            }

            const data = await response.json();
            scanTypeElement.innerText = `${data.scan_type} Scan`
            
            if (data.scan_type === 'passive') {

              if (data.spider_status === 'completed') {
                spiderStatusElement.innerText = 'Scan completed!!';
                spiderResultElement.innerText = ` Spider: ${JSON.stringify(data.spider_results)}`
                scanResultsElement.innerText = `ScanResults: ${data.scan_results}`
              } else {
                spiderStatusElement.innerText = `Scan in progress ${data.progress} %`
                setTimeout(() => checkStatus(url), 1000); // Pass the URL parameter
              }
            } else if(data.scan_type === 'active'){
              if (data.spider_status === 'completed') { 
                spiderStatusElement.innerText = 'Spider completed'
                spiderResultElement.innerText = `Spider: ${data.spider_results}`
                
                if (data.active_scan_status === 'completed') {
                  activeStatusElement.innerText = 'Completed'
                  scanResultsElement.innerText = `Active scan results: ${data.active_scan_results}`
                }
              } else {
                spiderStatusElement.innerText = `Spider in progress: ${data.progress}`
                setTimeout(() => checkStatus(url), 1000)
              }
            }

        } catch (error) {
            console.error('Error', error);
            statusElement.innerText = `An error occurred: ${error}`;
        }
    };

    checkStatus(scanStatusUrl);
});
