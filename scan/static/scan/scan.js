

document.addEventListener('DOMContentLoaded', () => {
  const displayElement = document.getElementById('display')
  const spiderElement = document.getElementById('spider')
  const scanElement = document.getElementById('scan')
  const reportElement = document.getElementById('report')
  const statElement = document.getElementById('stat')
  const submitElement = document.getElementById('submit')
  const statusUrl = '/check_status' 
  const checkStat = async (url) => {
    try {
      const res = await fetch(url)

      if (!res.ok) {
        throw new Error(`Network response was not ok: ${res.statusText}`)
      }
      const data = await res.json()
      console.log(data.scan_type)

      displayElement.innerHTML = `
      <div class='flex items-center justify-between'>
        <div class='flex flex-col items-center'>
          <div class="h-12 w-12 border-4 ${!data.spider_completed ? 'bg-white  border-gray-300' :  'bg-green-700 border-white drop-shadow' }  rounded-[100%] flex items-center justify-center">
            ${!data.spider_completed ? "<p class='text-lg text-gray-500 '>1</p>" : '<svg xmlns="http://www.w3.org/2000/svg" height="24px" viewBox="0 -960 960 960" width="24px" fill="#ffffff"><path d="M382-240 154-468l57-57 171 171 367-367 57 57-424 424Z"/></svg>'}
          </div>
          <p class="">Spider scan</p>
        </div>


        <div class='flex flex-col items-center'>
          <div class='h-12 w-12 border-4 ${!data.scan_completed ? 'bg-white  border-gray-300' :  'bg-green-700 border-white drop-shadow' }  rounded-[100%] flex items-center justify-center'>
            ${!data.scan_completed ? "<p class='text-lg text-gray-500 '>2</p>" : '<svg xmlns="http://www.w3.org/2000/svg" height="24px" viewBox="0 -960 960 960" width="24px" fill="#ffffff"><path d="M382-240 154-468l57-57 171 171 367-367 57 57-424 424Z"/></svg>'}
          </div>
          <p>Scan Status</p>
        </div>

        <div class='flex flex-col items-center'>
          <div class='h-12 w-12  border-4 ${!data.report_generated ? 'bg-white  border-gray-300' :  'bg-green-700 border-white drop-shadow' } rounded-[100%] flex items-center justify-center'>
            ${!data.report_generated ? "<p class='text-lg text-gray-500 '>3</p>" : '<svg xmlns="http://www.w3.org/2000/svg" height="24px" viewBox="0 -960 960 960" width="24px" fill="#ffffff"><path d="M382-240 154-468l57-57 171 171 367-367 57 57-424 424Z"/></svg>'}
          </div>
        <p>Vulnerability report</p>
        </div>
      </div>
      
      ${ data.report_generated ? 
        `<a  class="px-10 mt-4 text-center  w-full py-3 text-lg mx-auto bg-teal-500 hover:bg-teal-700 text-white rounded-xl">View Report</a>` : 
        `
          <div class='loader'>
            <span></span>
          </div>
          <p class='text-lg text-center pt-8' >Scanning ...</p>`}
        `
      console.log(data.report_generated) 
      // spiderElement.innerText = `Spider: ${data.spider_completed}`
      // scanElement.innerText = `${data.scan_completed}`
      // reportElement.innerText = `${data.report_generated}`
      //
      if (!data.report_generated) {
        setTimeout(() => {
          checkStat(statusUrl)
        }, 1000);
      } 

    } catch (error) {
      // statElement.innerText = `An error occurred: ${error}`
    }
  }
  // submitElement.addEventListener('click', () => {
  checkStat(statusUrl)
  // })
})
